{"ast":null,"code":"var _jsxFileName = \"/Users/suraj/project/paypay/review-system/review-system-client/src/modulus/login/index.tsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Notification from \"common/component/notification\";\nimport { pxToRem } from \"theme\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 575\n  }\n});\n\nfunction Login({\n  user\n}) {\n  const classes = useStyles();\n  const [loginData, setLoginData] = React.useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [notification, setNotification] = React.useState({\n    open: false,\n    severity: \"\",\n    message: \"\"\n  });\n\n  const onChange = e => {\n    setLoginData({ ...loginData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onLogin = async () => {\n    try {\n      await user.login(loginData);\n    } catch (e) {\n      var _e$data, _e$data$error;\n\n      setNotification({\n        open: true,\n        severity: \"error\",\n        message: e === null || e === void 0 ? void 0 : (_e$data = e.data) === null || _e$data === void 0 ? void 0 : (_e$data$error = _e$data.error) === null || _e$data$error === void 0 ? void 0 : _e$data$error.message\n      });\n    }\n  }; // const receiveMessage = (event: any) => {\n  //   console.log(\"this is event\", event);\n  //   // alert(\"got message: \" + event.data);\n  // };\n\n\n  function getData() {\n    setTimeout(() => {\n      const myIframe = document.getElementById(\"test\");\n      console.log(\"myIframe\", myIframe); // @ts-ignore\n\n      const message = {\n        apiKey: \"1234\",\n        onPreview: '()=>{}',\n        onSave: '()=>{}'\n      }; // @ts-ignore\n\n      myIframe.contentWindow.postMessage(JSON.stringify(message), \"*\");\n    }, 1000);\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mt: pxToRem(240),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    m: pxToRem(12),\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Box, {\n    m: pxToRem(12),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Email\",\n    name: \"email\",\n    value: loginData.email,\n    onChange: onChange,\n    type: \"text\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: pxToRem(12),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Password\",\n    name: \"password\",\n    value: loginData.password,\n    onChange: onChange,\n    type: \"password\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: pxToRem(12),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: onLogin,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"853\",\n    onLoad: getData,\n    id: \"test\",\n    height: \"480\",\n    src: \"http://localhost:3000\",\n    frameBorder: \"0\",\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Notification, {\n    open: notification.open,\n    onClose: () => setNotification({ ...notification,\n      open: false\n    }),\n    severity: notification.severity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, notification === null || notification === void 0 ? void 0 : notification.message));\n}\n\nexport default inject(\"user\")(observer(Login));","map":{"version":3,"sources":["/Users/suraj/project/paypay/review-system/review-system-client/src/modulus/login/index.tsx"],"names":["React","inject","observer","Box","Card","TextField","Typography","Button","makeStyles","Notification","pxToRem","useStyles","root","minWidth","Login","user","classes","loginData","setLoginData","useState","email","password","notification","setNotification","open","severity","message","onChange","e","target","name","value","onLogin","login","data","error","getData","setTimeout","myIframe","document","getElementById","console","log","apiKey","onPreview","onSave","contentWindow","postMessage","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Notification from \"common/component/notification\";\nimport { pxToRem } from \"theme\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 575,\n  },\n});\n\nfunction Login({ user }: any) {\n  const classes = useStyles();\n\n  const [loginData, setLoginData] = React.useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [notification, setNotification] = React.useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n\n  const onChange = (e: any) => {\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\n  };\n\n  const onLogin = async () => {\n    try {\n      await user.login(loginData);\n    } catch (e) {\n      setNotification({\n        open: true,\n        severity: \"error\",\n        message: e?.data?.error?.message,\n      });\n    }\n  };\n\n  // const receiveMessage = (event: any) => {\n  //   console.log(\"this is event\", event);\n  //   // alert(\"got message: \" + event.data);\n  // };\n  function getData() {\n    setTimeout(() => {\n      const myIframe = document.getElementById(\"test\");\n      console.log(\"myIframe\", myIframe);\n      // @ts-ignore\n\n      const message = {\n        apiKey:\"1234\",\n        onPreview:'()=>{}',\n        onSave:'()=>{}',\n      };\n      // @ts-ignore\n      myIframe.contentWindow.postMessage(\n        JSON.stringify(message),\n        \"*\"\n      );\n    }, 1000);\n  }\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" mt={pxToRem(240)}>\n      <Card className={classes.root} variant=\"outlined\">\n        <Box m={pxToRem(12)} textAlign=\"center\">\n          <Typography variant=\"h4\" color=\"primary\">\n            Login\n          </Typography>\n        </Box>\n        <Box m={pxToRem(12)}>\n          <TextField\n            label=\"Email\"\n            name=\"email\"\n            value={loginData.email}\n            onChange={onChange}\n            type=\"text\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        </Box>\n        <Box m={pxToRem(12)}>\n          <TextField\n            label=\"Password\"\n            name=\"password\"\n            value={loginData.password}\n            onChange={onChange}\n            type=\"password\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        </Box>\n        <Box m={pxToRem(12)}>\n          <Button variant=\"contained\" onClick={onLogin} color=\"primary\">\n            Login\n          </Button>\n        </Box>\n      </Card>\n      <iframe\n        width=\"853\"\n        onLoad={getData}\n        id=\"test\"\n        height=\"480\"\n        src=\"http://localhost:3000\"\n        frameBorder=\"0\"\n        allowFullScreen\n      ></iframe>\n      <Notification\n        open={notification.open}\n        onClose={() => setNotification({ ...notification, open: false })}\n        severity={notification.severity}\n      >\n        {notification?.message}\n      </Notification>\n    </Box>\n  );\n}\nexport default inject(\"user\")(observer(Login));\n"]},"metadata":{},"sourceType":"module"}