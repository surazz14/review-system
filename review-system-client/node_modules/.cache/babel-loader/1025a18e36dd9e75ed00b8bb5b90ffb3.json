{"ast":null,"code":"var _jsxFileName = \"/Users/suraj/project/paypay/review-system/review-system-client/src/modulus/review/index.tsx\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Table from \"common/component/table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Model from \"common/component/model\";\nimport Notification from \"common/component/notification\";\nimport AddFeedback from \"./addFeedback\";\nimport { pxToRem } from \"theme\";\nconst columns = [{\n  title: \"Name\",\n  dataIndex: \"name\",\n  key: \"name\"\n}, {\n  title: \"Email\",\n  dataIndex: \"email\",\n  key: \"email\"\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  key: \"address\"\n}, {\n  title: \"Position\",\n  dataIndex: \"position\",\n  key: \"position\"\n}, {\n  title: \"ReviewedBy\",\n  dataIndex: \"reviewedBy\",\n  key: \"reviewedBy\"\n}];\n\nfunction Review({\n  reviews\n}) {\n  const [openFeedbackModal, setOpenFeedbackModal] = React.useState(false);\n  const [currentMember, setCurrentMember] = React.useState({});\n  const [notification, setNotification] = React.useState({\n    open: false,\n    severity: \"\",\n    message: \"\"\n  });\n  React.useEffect(() => {\n    reviews.getAllReview();\n  }, [reviews]);\n\n  const handleOpenFeedbackModal = member => {\n    setCurrentMember(member);\n    setOpenFeedbackModal(true);\n  };\n\n  const handleCloseFeedbackModal = () => {\n    setOpenFeedbackModal(false);\n  };\n\n  const extraRows = member => /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => handleOpenFeedbackModal(member),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, (member === null || member === void 0 ? void 0 : member.feedback) ? \"edit\" : \"add\"));\n\n  const extraColumns = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Feedback\"));\n\n  return /*#__PURE__*/React.createElement(Box, {\n    m: pxToRem(20),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Review\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    rows: reviews.normalizedReview,\n    columns: columns,\n    extraRows: extraRows,\n    extraColumns: extraColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Model, {\n    title: \"Assign Member For Review\",\n    open: openFeedbackModal,\n    handleClose: handleCloseFeedbackModal,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddFeedback, {\n    currentMember: currentMember,\n    handlers: {\n      editFeedback: reviews.editFeedback,\n      getAllReview: reviews.getAllReview,\n      handleClose: handleCloseFeedbackModal,\n      callback: setNotification\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Notification, {\n    open: notification.open,\n    onClose: () => setNotification({ ...notification,\n      open: false\n    }),\n    severity: notification.severity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, notification === null || notification === void 0 ? void 0 : notification.message));\n}\n\nexport default inject(\"reviews\")(observer(Review));","map":{"version":3,"sources":["/Users/suraj/project/paypay/review-system/review-system-client/src/modulus/review/index.tsx"],"names":["React","inject","observer","Table","TableCell","Button","Box","Typography","Model","Notification","AddFeedback","pxToRem","columns","title","dataIndex","key","Review","reviews","openFeedbackModal","setOpenFeedbackModal","useState","currentMember","setCurrentMember","notification","setNotification","open","severity","message","useEffect","getAllReview","handleOpenFeedbackModal","member","handleCloseFeedbackModal","extraRows","feedback","extraColumns","normalizedReview","editFeedback","handleClose","callback"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport Table from \"common/component/table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Model from \"common/component/model\";\nimport Notification from \"common/component/notification\";\nimport AddFeedback from \"./addFeedback\";\n\nimport { pxToRem } from \"theme\";\n\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"email\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n  },\n  {\n    title: \"Position\",\n    dataIndex: \"position\",\n    key: \"position\",\n  },\n  {\n    title: \"ReviewedBy\",\n    dataIndex: \"reviewedBy\",\n    key: \"reviewedBy\",\n  },\n];\n\nfunction Review({ reviews }: any) {\n  const [openFeedbackModal, setOpenFeedbackModal] = React.useState(false);\n  const [currentMember, setCurrentMember] = React.useState({});\n  const [notification, setNotification] = React.useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n\n\n  React.useEffect(() => {\n    reviews.getAllReview();\n  }, [reviews]);\n\n  const handleOpenFeedbackModal = (member: any) => {\n    setCurrentMember(member);\n    setOpenFeedbackModal(true);\n  };\n\n  const handleCloseFeedbackModal = () => {\n    setOpenFeedbackModal(false);\n  };\n\n  const extraRows = (member: any) => (\n    <TableCell>\n      <Button\n        variant=\"contained\"\n        onClick={() => handleOpenFeedbackModal(member)}\n        color=\"primary\"\n      >\n        {member?.feedback ? \"edit\" : \"add\"}\n      </Button>\n    </TableCell>\n  );\n\n  const extraColumns = () => (\n    <>\n      <TableCell>Feedback</TableCell>\n    </>\n  );\n\n  return (\n    <Box m={pxToRem(20)}>\n      <Typography variant='h4'>Review</Typography>\n      <br />\n      <br />\n      <Table\n        rows={reviews.normalizedReview}\n        columns={columns}\n        extraRows={extraRows}\n        extraColumns={extraColumns}\n      />\n      <Model\n        title=\"Assign Member For Review\"\n        open={openFeedbackModal}\n        handleClose={handleCloseFeedbackModal}\n        fullWidth\n      >\n        <AddFeedback\n          currentMember={currentMember}\n          handlers={{\n            editFeedback: reviews.editFeedback,\n            getAllReview: reviews.getAllReview,\n            handleClose: handleCloseFeedbackModal,\n            callback: setNotification\n          }}\n        />\n      </Model>\n      <Notification\n        open={notification.open}\n        onClose={() => setNotification({ ...notification, open: false })}\n        severity={notification.severity}\n      >\n        {notification?.message}\n      </Notification>\n    </Box>\n  );\n}\n\nexport default inject(\"reviews\")(observer(Review));\n"]},"metadata":{},"sourceType":"module"}