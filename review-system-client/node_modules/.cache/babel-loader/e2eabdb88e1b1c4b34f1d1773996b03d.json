{"ast":null,"code":"import { types, flow } from \"mobx-state-tree\";\nimport generalAction from \"../generalActions\";\nimport apphistory from \"apphistory\";\nexport let roleType;\n\n(function (roleType) {\n  roleType[\"admin\"] = \"admin\";\n  roleType[\"member\"] = \"member\";\n})(roleType || (roleType = {}));\n\nconst User = types.model(\"user\", {\n  _id: types.string,\n  name: types.string,\n  email: types.string,\n  address: types.string,\n  position: types.string,\n  token: types.string,\n  role: types.string\n}).actions(generalAction).actions(self => ({\n  login: flow(function* (loginData) {\n    try {\n      const user = yield self.postRequest(\"/user/login\")(loginData);\n      self._id = user._id;\n      self.email = user.email;\n      self.address = user.address;\n      self.position = user.position;\n      self.token = user.token;\n      self.role = user.role;\n      apphistory.push(\"/review\");\n      return user;\n    } catch (e) {\n      throw e;\n    }\n  }),\n  logout: () => {\n    self.token = \"\";\n    apphistory.push(\"/\");\n  }\n}));\nexport default User;","map":{"version":3,"sources":["/Users/suraj/project/paypay/review-system/review-system-client/src/entities/user/user.ts"],"names":["types","flow","generalAction","apphistory","roleType","User","model","_id","string","name","email","address","position","token","role","actions","self","login","loginData","user","postRequest","push","e","logout"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,iBAA5B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,WAAYC,QAAZ;;WAAYA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;GAAAA,Q,KAAAA,Q;;AAKZ,MAAMC,IAAI,GAAGL,KAAK,CACfM,KADU,CACJ,MADI,EACI;AACbC,EAAAA,GAAG,EAAEP,KAAK,CAACQ,MADE;AAEbC,EAAAA,IAAI,EAAET,KAAK,CAACQ,MAFC;AAGbE,EAAAA,KAAK,EAAEV,KAAK,CAACQ,MAHA;AAIbG,EAAAA,OAAO,EAAEX,KAAK,CAACQ,MAJF;AAKbI,EAAAA,QAAQ,EAAEZ,KAAK,CAACQ,MALH;AAMbK,EAAAA,KAAK,EAAEb,KAAK,CAACQ,MANA;AAObM,EAAAA,IAAI,EAAEd,KAAK,CAACQ;AAPC,CADJ,EAUVO,OAVU,CAUFb,aAVE,EAWVa,OAXU,CAWDC,IAAD,KAAW;AAElBC,EAAAA,KAAK,EAAEhB,IAAI,CAAC,WAAWiB,SAAX,EAA2D;AACrE,QAAI;AACF,YAAMC,IAAS,GAAG,MAAMH,IAAI,CAACI,WAAL,CAAiB,aAAjB,EAAgCF,SAAhC,CAAxB;AACAF,MAAAA,IAAI,CAACT,GAAL,GAAWY,IAAI,CAACZ,GAAhB;AACAS,MAAAA,IAAI,CAACN,KAAL,GAAaS,IAAI,CAACT,KAAlB;AACAM,MAAAA,IAAI,CAACL,OAAL,GAAeQ,IAAI,CAACR,OAApB;AACAK,MAAAA,IAAI,CAACJ,QAAL,GAAgBO,IAAI,CAACP,QAArB;AACAI,MAAAA,IAAI,CAACH,KAAL,GAAaM,IAAI,CAACN,KAAlB;AACAG,MAAAA,IAAI,CAACF,IAAL,GAAYK,IAAI,CAACL,IAAjB;AACAX,MAAAA,UAAU,CAACkB,IAAX,CAAgB,SAAhB;AACA,aAAOF,IAAP;AACD,KAVD,CAUE,OAAOG,CAAP,EAAU;AACV,YAAMA,CAAN;AACD;AACF,GAdU,CAFO;AAkBlBC,EAAAA,MAAM,EAAE,MAAM;AACZP,IAAAA,IAAI,CAACH,KAAL,GAAa,EAAb;AACAV,IAAAA,UAAU,CAACkB,IAAX,CAAgB,GAAhB;AACD;AArBiB,CAAX,CAXE,CAAb;AAmCA,eAAehB,IAAf","sourcesContent":["import { types, flow } from \"mobx-state-tree\";\nimport generalAction from \"../generalActions\";\nimport apphistory from \"apphistory\";\n\nexport enum roleType {\n  admin = \"admin\",\n  member = \"member\",\n}\n\nconst User = types\n  .model(\"user\", {\n    _id: types.string,\n    name: types.string,\n    email: types.string,\n    address: types.string,\n    position: types.string,\n    token: types.string,\n    role: types.string,\n  })\n  .actions(generalAction)\n  .actions((self) => ({\n\n    login: flow(function* (loginData: { email: string; password: string }) {\n      try {\n        const user: any = yield self.postRequest(\"/user/login\")(loginData);\n        self._id = user._id;\n        self.email = user.email;\n        self.address = user.address;\n        self.position = user.position;\n        self.token = user.token;\n        self.role = user.role;\n        apphistory.push(\"/review\");\n        return user;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    logout: () => {\n      self.token = \"\";\n      apphistory.push(\"/\");\n    },\n  }))\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}