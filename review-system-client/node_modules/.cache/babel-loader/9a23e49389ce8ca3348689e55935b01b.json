{"ast":null,"code":"import _regeneratorRuntime from\"/Users/suraj/project/paypay/review-system/review-system-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import{types,flow}from\"mobx-state-tree\";import generalAction from\"../generalActions\";import Review from\"./review\";import Store from\"../setUpStore\";var collection=types.model(\"Review\",{reviews:types.optional(types.array(Review),[])}).actions(generalAction).actions(function(self){return{getAllReview:flow(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var userId,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:userId=Store.user._id;_context.prev=1;_context.next=4;return self.getRequest(\"/user/review/\".concat(userId))();case 4:response=_context.sent;self.reviews=response.reviews;return _context.abrupt(\"return\",response);case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);throw _context.t0;case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);})),editFeedback:flow(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_id,feedback,member){var currentMember,_currentMember$assign,_currentMember$review,payload,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:currentMember=self.reviews.find(function(data){return data._id===_id;});_context2.prev=1;payload={assignedUser:currentMember===null||currentMember===void 0?void 0:(_currentMember$assign=currentMember.assignedUser)===null||_currentMember$assign===void 0?void 0:_currentMember$assign._id,feedback:feedback,reviewedBy:currentMember===null||currentMember===void 0?void 0:(_currentMember$review=currentMember.reviewedBy)===null||_currentMember$review===void 0?void 0:_currentMember$review._id};_context2.next=5;return self.putRequest(\"/user/review/\".concat(_id))(payload);case 5:response=_context2.sent;return _context2.abrupt(\"return\",response);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);throw _context2.t0;case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);})),deleteMember:flow(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_id){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return self.deleteRequest(\"/user/\".concat(_id))();case 3:response=_context3.sent;return _context3.abrupt(\"return\",response);case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);throw _context3.t0;case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}))};}).views(function(self){return{get normalizedReview(){return self.reviews.map(function(review){var _review$assignedUser,_review$assignedUser2,_review$assignedUser3,_review$assignedUser4,_review$reviewedBy;return{_id:review._id,feedback:review.feedback,name:(_review$assignedUser=review.assignedUser)===null||_review$assignedUser===void 0?void 0:_review$assignedUser.name,email:(_review$assignedUser2=review.assignedUser)===null||_review$assignedUser2===void 0?void 0:_review$assignedUser2.email,address:(_review$assignedUser3=review.assignedUser)===null||_review$assignedUser3===void 0?void 0:_review$assignedUser3.address,position:(_review$assignedUser4=review.assignedUser)===null||_review$assignedUser4===void 0?void 0:_review$assignedUser4.position,reviewedBy:(_review$reviewedBy=review.reviewedBy)===null||_review$reviewedBy===void 0?void 0:_review$reviewedBy.email};});},getReviewById:function getReviewById(_id){self.reviews.find(function(reviewId){return reviewId===_id;});}};});export default collection;","map":{"version":3,"sources":["/Users/suraj/project/paypay/review-system/review-system-client/src/entities/review/reviewCollection.ts"],"names":["types","flow","generalAction","Review","Store","collection","model","reviews","optional","array","actions","self","getAllReview","userId","user","_id","getRequest","response","editFeedback","feedback","member","currentMember","find","data","payload","assignedUser","reviewedBy","putRequest","deleteMember","deleteRequest","views","normalizedReview","map","review","name","email","address","position","getReviewById","reviewId"],"mappings":"4KAAA,OAASA,KAAT,CAAgBC,IAAhB,KAA4B,iBAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,mBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,GAAMC,CAAAA,UAAU,CAAGL,KAAK,CACrBM,KADgB,CACV,QADU,CACA,CACfC,OAAO,CAAEP,KAAK,CAACQ,QAAN,CAAeR,KAAK,CAACS,KAAN,CAAYN,MAAZ,CAAf,CAAoC,EAApC,CADM,CADA,EAIhBO,OAJgB,CAIRR,aAJQ,EAKhBQ,OALgB,CAKR,SAACC,IAAD,QAAW,CAClBC,YAAY,CAAEX,IAAI,uCAAC,uJACXY,MADW,CACMT,KAAK,CAACU,IAAN,CAAWC,GADjB,iCAGE,MAAMJ,CAAAA,IAAI,CAACK,UAAL,wBAAgCH,MAAhC,IAAN,CAHF,OAGTI,QAHS,eAIfN,IAAI,CAACJ,OAAL,CAAeU,QAAQ,CAACV,OAAxB,CAJe,gCAKRU,QALQ,gJAAD,EADA,CAYlBC,YAAY,CAAEjB,IAAI,uCAAC,kBAAWc,GAAX,CAAwBI,QAAxB,CAA0CC,MAA1C,qMACXC,aADW,CACKV,IAAI,CAACJ,OAAL,CAAae,IAAb,CAAkB,SAACC,IAAD,QAAeA,CAAAA,IAAI,CAACR,GAAL,GAAaA,GAA5B,EAAlB,CADL,kBAGTS,OAHS,CAGM,CACnBC,YAAY,CAAEJ,aAAF,SAAEA,aAAF,wCAAEA,aAAa,CAAEI,YAAjB,gDAAE,sBAA6BV,GADxB,CAEnBI,QAAQ,CAAEA,QAFS,CAGnBO,UAAU,CAAEL,aAAF,SAAEA,aAAF,wCAAEA,aAAa,CAAEK,UAAjB,gDAAE,sBAA2BX,GAHpB,CAHN,kBAQE,MAAMJ,CAAAA,IAAI,CAACgB,UAAL,wBAAgCZ,GAAhC,GAAuCS,OAAvC,CAAN,CARF,OAQTP,QARS,iDASRA,QATQ,sJAAD,EAZA,CA2BlBW,YAAY,CAAE3B,IAAI,uCAAC,kBAAWc,GAAX,qKAEE,MAAMJ,CAAAA,IAAI,CAACkB,aAAL,iBAA4Bd,GAA5B,IAAN,CAFF,OAETE,QAFS,iDAGRA,QAHQ,sJAAD,EA3BA,CAAX,EALQ,EA0ChBa,KA1CgB,CA0CV,SAACnB,IAAD,QAAW,CAEhB,GAAIoB,CAAAA,gBAAJ,EAAuB,CACrB,MAAOpB,CAAAA,IAAI,CAACJ,OAAL,CAAayB,GAAb,CAAiB,SAACC,MAAD,sHAAa,CACnClB,GAAG,CAAEkB,MAAM,CAAClB,GADuB,CAEnCI,QAAQ,CAAEc,MAAM,CAACd,QAFkB,CAGnCe,IAAI,uBAAED,MAAM,CAACR,YAAT,+CAAE,qBAAqBS,IAHQ,CAInCC,KAAK,wBAAEF,MAAM,CAACR,YAAT,gDAAE,sBAAqBU,KAJO,CAKnCC,OAAO,wBAAEH,MAAM,CAACR,YAAT,gDAAE,sBAAqBW,OALK,CAMnCC,QAAQ,wBAAEJ,MAAM,CAACR,YAAT,gDAAE,sBAAqBY,QANI,CAOnCX,UAAU,qBAAEO,MAAM,CAACP,UAAT,6CAAE,mBAAmBS,KAPI,CAAb,EAAjB,CAAP,CASD,CAZe,CAchBG,aAdgB,wBAcFvB,GAdE,CAcW,CACzBJ,IAAI,CAACJ,OAAL,CAAae,IAAb,CAAkB,SAACiB,QAAD,QAAmBA,CAAAA,QAAQ,GAAKxB,GAAhC,EAAlB,EACD,CAhBe,CAAX,EA1CU,CAAnB,CA6DA,cAAeV,CAAAA,UAAf","sourcesContent":["import { types, flow } from \"mobx-state-tree\";\nimport generalAction from \"../generalActions\";\nimport Review from \"./review\";\nimport Store from \"../setUpStore\";\nconst collection = types\n  .model(\"Review\", {\n    reviews: types.optional(types.array(Review), []),\n  })\n  .actions(generalAction)\n  .actions((self) => ({\n    getAllReview: flow(function* () {\n      const userId: string = Store.user._id;\n      try {\n        const response = yield self.getRequest(`/user/review/${userId}`)();\n        self.reviews = response.reviews;\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    editFeedback: flow(function* (_id: string, feedback: string, member: any) {\n      const currentMember = self.reviews.find((data: any) => data._id === _id);\n      try {\n        const payload: any = {\n          assignedUser: currentMember?.assignedUser?._id,\n          feedback: feedback,\n          reviewedBy: currentMember?.reviewedBy?._id,\n        };\n        const response = yield self.putRequest(`/user/review/${_id}`)(payload);\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    deleteMember: flow(function* (_id: any) {\n      try {\n        const response = yield self.deleteRequest(`/user/${_id}`)();\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n  }))\n  \n  .views((self) => ({\n\n    get normalizedReview() {\n      return self.reviews.map((review) => ({\n        _id: review._id,\n        feedback: review.feedback,\n        name: review.assignedUser?.name,\n        email: review.assignedUser?.email,\n        address: review.assignedUser?.address,\n        position: review.assignedUser?.position,\n        reviewedBy: review.reviewedBy?.email\n      }));\n    },\n\n    getReviewById(_id: string) {\n      self.reviews.find((reviewId: any) => reviewId === _id);\n    },\n  }));\n\nexport default collection;\n"]},"metadata":{},"sourceType":"module"}