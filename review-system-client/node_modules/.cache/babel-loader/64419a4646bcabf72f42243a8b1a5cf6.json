{"ast":null,"code":"var _jsxFileName = \"/Users/suraj/project/paypay/review-system/review-system-client/src/modulus/admin/assignMember/index.tsx\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { pxToRem } from \"theme\";\nexport default function AssignMember({\n  members,\n  currentMember,\n  handlers\n}) {\n  const [selectedMembers, setSelectedMembers] = React.useState([]);\n  React.useEffect(() => {\n    if (currentMember === null || currentMember === void 0 ? void 0 : currentMember.assigned) {\n      setSelectedMembers(members.normalizedAssignedUser(currentMember === null || currentMember === void 0 ? void 0 : currentMember.assigned));\n    }\n  }, [currentMember, currentMember.assigned, members]);\n\n  const onAssign = () => {\n    handlers.assignMember(currentMember, selectedMembers);\n    handlers.handleClose();\n  };\n\n  const onChange = (e, value) => {\n    setSelectedMembers(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    m: pxToRem(8),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    options: members.membersExcept(currentMember._id, members.membersExceptMe),\n    value: selectedMembers,\n    onChange: onChange,\n    getOptionLabel: option => option === null || option === void 0 ? void 0 : option.email,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"standard\",\n      label: \"Member\",\n      placeholder: \"Select members\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: pxToRem(8),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: onAssign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Assign Member\")));\n}","map":{"version":3,"sources":["/Users/suraj/project/paypay/review-system/review-system-client/src/modulus/admin/assignMember/index.tsx"],"names":["React","Box","TextField","Button","Autocomplete","pxToRem","AssignMember","members","currentMember","handlers","selectedMembers","setSelectedMembers","useState","useEffect","assigned","normalizedAssignedUser","onAssign","assignMember","handleClose","onChange","e","value","membersExcept","_id","membersExceptMe","option","email","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SAASC,OAAT,QAAwB,OAAxB;AAWA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,OADmC;AAEnCC,EAAAA,aAFmC;AAGnCC,EAAAA;AAHmC,CAAtB,EAIG;AAChB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,KAAK,CAACY,QAAN,CAAe,EAAf,CAA9C;AAEAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAIL,aAAJ,aAAIA,aAAJ,uBAAIA,aAAa,CAAEM,QAAnB,EAA6B;AAC3BH,MAAAA,kBAAkB,CAChBJ,OAAO,CAACQ,sBAAR,CAA+BP,aAA/B,aAA+BA,aAA/B,uBAA+BA,aAAa,CAAEM,QAA9C,CADgB,CAAlB;AAGD;AACF,GAND,EAMG,CAACN,aAAD,EAAgBA,aAAa,CAACM,QAA9B,EAAwCP,OAAxC,CANH;;AAQA,QAAMS,QAAQ,GAAG,MAAM;AACrBP,IAAAA,QAAQ,CAACQ,YAAT,CAAsBT,aAAtB,EAAqCE,eAArC;AACAD,IAAAA,QAAQ,CAACS,WAAT;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAG,CAACC,CAAD,EAASC,KAAT,KAAwB;AACvCV,IAAAA,kBAAkB,CAACU,KAAD,CAAlB;AACD,GAFD;;AAIA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAEhB,OAAO,CAAC,CAAD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,OAAO,EAAEE,OAAO,CAACe,aAAR,CACPd,aAAa,CAACe,GADP,EAEPhB,OAAO,CAACiB,eAFD,CAFX;AAME,IAAA,KAAK,EAAEd,eANT;AAOE,IAAA,QAAQ,EAAES,QAPZ;AAQE,IAAA,cAAc,EAAGM,MAAD,IAAiBA,MAAjB,aAAiBA,MAAjB,uBAAiBA,MAAM,CAAEC,KAR3C;AASE,IAAA,WAAW,EAAGC,MAAD,iBACX,oBAAC,SAAD,oBACMA,MADN;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,WAAW,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAqBE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAEtB,OAAO,CAAC,CAAD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEW,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CArBF,CADF;AA6BD","sourcesContent":["import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { pxToRem } from \"theme\";\n\ninterface AddMemberType {\n  members: any;\n  currentMember: any;\n  handlers: {\n    assignMember: (currentMember: any, selectedMember: any) => void;\n    handleClose: () => void;\n  };\n}\n\nexport default function AssignMember({\n  members,\n  currentMember,\n  handlers,\n}: AddMemberType) {\n  const [selectedMembers, setSelectedMembers] = React.useState([]);\n\n  React.useEffect(() => {\n    if (currentMember?.assigned) {\n      setSelectedMembers(\n        members.normalizedAssignedUser(currentMember?.assigned)\n      );\n    }\n  }, [currentMember, currentMember.assigned, members]);\n\n  const onAssign = () => {\n    handlers.assignMember(currentMember, selectedMembers);\n    handlers.handleClose();\n  };\n\n  const onChange = (e: any, value: any) => {\n    setSelectedMembers(value);\n  };\n\n  return (\n    <Box>\n      <Box m={pxToRem(8)}>\n        <Autocomplete\n          multiple\n          options={members.membersExcept(\n            currentMember._id,\n            members.membersExceptMe\n          )}\n          value={selectedMembers}\n          onChange={onChange}\n          getOptionLabel={(option: any) => option?.email}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"standard\"\n              label=\"Member\"\n              placeholder=\"Select members\"\n            />\n          )}\n        />\n      </Box>\n      <Box m={pxToRem(8)}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onAssign}>\n          Assign Member\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}