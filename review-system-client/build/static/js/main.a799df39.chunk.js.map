{"version":3,"sources":["entities/user/user.ts","theme.js","common/utility/serverCall.js","entities/generalActions.js","entities/member/member.ts","entities/member/memberCollection.ts","entities/review/review.ts","entities/review/reviewCollection.ts","apphistory.js","entities/setUpStore.js","modulus/sidebar/index.tsx","common/component/table/index.tsx","common/component/model/index.tsx","modulus/admin/addMember/index.tsx","modulus/admin/assignMember/index.tsx","common/component/loading/index.jsx","common/component/notification/index.tsx","modulus/admin/member/index.tsx","modulus/review/addFeedback/index.tsx","modulus/review/index.tsx","modulus/login/index.tsx","route/index.js","modulus/test.js","route/route.js","App.js","serviceWorker.js","index.js"],"names":["roleType","pxToRem","size","fontSize","theme","createMuiTheme","palette","background","default","axiosInstance","axios","create","baseURL","headers","Origin","Accept","serverRequest","method","url","data","a","options","params","withResponseHeader","withResponseComplete","query","extras","contentType","result","status","response","getRequest","postRequest","putRequest","deleteRequest","setKey","self","key","value","Member","types","model","_id","string","name","email","address","position","password","assigned","frozen","actions","generalAction","collection","members","optional","array","getAllMember","flow","users","addMember","member","assignMember","currentMember","selectedMembers","payload","map","editMember","deleteMember","views","normalizedAssignedUser","memberIds","forEach","find","push","filter","Store","user","membersExcept","Review","assignedUser","feedback","reviewedBy","reviews","getAllReview","userId","editFeedback","review","getReviewById","reviewId","apphistory","createBrowserHistory","User","token","role","login","loginData","logout","store","MemberCollection","ReviewCollection","window","app","useStyles","makeStyles","root","display","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","SideMenu","classes","className","Drawer","variant","anchor","open","paper","Box","textAlign","Typography","List","style","textDecoration","to","admin","ListItem","button","ListItemText","primary","Divider","Button","onClick","table","minWidth","CommonTable","columns","rows","extraColumns","extraRows","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","column","TableCell","title","TableBody","row","i","Model","handleClose","children","fullWidth","Dialog","onClose","DialogTitle","DialogContent","AddMember","mode","handlers","React","useState","setMember","useEffect","onAdd","callback","message","severity","error","onChange","e","target","m","TextField","label","type","color","AssignMember","setSelectedMembers","Autocomplete","multiple","membersExceptMe","getOptionLabel","option","renderInput","placeholder","createStyles","backdrop","secondary","main","backgroundColor","Loading","loading","Fragment","Backdrop","CircularProgress","Notification","Snackbar","autoHideDuration","Alert","dataIndex","inject","observer","openAddMemberModal","setOpenAddMemberModal","openEditMemberModal","setOpenEditMemberModal","setCurrentMember","notification","setNotification","openAssignMemberModal","setOpenAssignMemberModal","handleCloseAddMemberModal","handleCloseAssignMemberModal","handleCloseEditMemberModal","length","handleOpenEditMemberModal","console","info","AddFeedback","setFeedback","id","multiline","openFeedbackModal","setOpenFeedbackModal","handleCloseFeedbackModal","normalizedReview","handleOpenFeedbackModal","path","exact","is_private","setLoginData","onLogin","mt","Card","onLoad","setTimeout","myIframe","document","getElementById","log","contentWindow","postMessage","JSON","stringify","apiKey","onPreview","onSave","height","src","frameBorder","allowFullScreen","script","createElement","location","hostname","body","appendChild","onload","zKEY","APIKEY","WLID","category","doctype","guide","zegal","Zegal","CONTAINERID","GUIDEID","loadDocument","existing","onerror","inset","zIndex","getInvoice","RouterSwitch","routes","index","rest","history","ml","App","Boolean","match","WrapThemeProvider","props","ThemeProvider","CssBaseline","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a799df39.chunk.js","sourcesContent":["import { types, flow } from \"mobx-state-tree\";\nimport generalAction from \"../generalActions\";\nimport apphistory from \"apphistory\";\n\nexport enum roleType {\n  admin = \"admin\",\n  member = \"member\",\n}\n\nconst User = types\n  .model(\"user\", {\n    _id: types.string,\n    name: types.string,\n    email: types.string,\n    address: types.string,\n    position: types.string,\n    token: types.string,\n    role: types.string,\n  })\n  .actions(generalAction)\n  .actions((self) => ({\n\n    login: flow(function* (loginData: { email: string; password: string }) {\n      try {\n        const user: any = yield self.postRequest(\"/user/login\")(loginData);\n        self._id = user._id;\n        self.email = user.email;\n        self.address = user.address;\n        self.position = user.position;\n        self.token = user.token;\n        self.role = user.role;\n        apphistory.push(\"/review\");\n        return user;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    logout: () => {\n      self.token = \"\";\n      apphistory.push(\"/\");\n    },\n  }))\n\nexport default User;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst fontSize = 14;\nconst htmlFontSize = 16;\nconst coef = fontSize / 14;\n\nexport const pxToRem = (size) => {\n  return `${(size / htmlFontSize) * coef}rem`;\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#f2f2f2\",\n    },\n  },\n});\n\nexport default theme","import axios from \"axios\";\n\nexport const axiosInstance = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  headers: {\n    Origin: \"*\",\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nconst serverRequest = (method = \"POST\") => (url) => async (\n  data,\n  options = {\n    params: {},\n    withResponseHeader: false,\n    withResponseComplete: false,\n  }\n) => {\n  const query = {\n    method,\n    url,\n    data,\n  };\n  if (options.params) {\n    query.params = options.params;\n  }\n\n  let extras = {};\n      \n  if (options.contentType) {\n    extras.contentType = options.contentType || \"application/json\";\n  }\n\n  try {\n    let result = await axiosInstance(query);\n    if (options.withResponseComplete) {\n      return result;\n    }\n\n    if (options.withResponseHeader) {\n      return {\n        headers: {\n          ...result.headers,\n          status: result.status,\n        },\n        ...result.data,\n      };\n    }\n    return result.data;\n  } catch (error) {\n    throw error.response;\n  }\n};\n\nexport const getRequest = serverRequest(\"GET\");\nexport const postRequest = serverRequest(\"POST\");\nexport const putRequest = serverRequest(\"PUT\");\nexport const deleteRequest = serverRequest(\"DELETE\");\n\nexport default serverRequest;\n","import { getRequest, postRequest, putRequest, deleteRequest } from '../common/utility/serverCall'\n\nexport const setKey = (self) => (key, value) => {\n  self[key] = value\n  return self[key]\n}\n\nexport default (self) => ({\n  getRequest,\n  postRequest,\n  putRequest,\n  deleteRequest,\n  setKey: setKey(self),\n})\n","import { types } from \"mobx-state-tree\";\nimport generalAction from \"../generalActions\";\n\nconst Member = types\n  .model(\"member\", {\n    _id: types.string,\n    name: types.string,\n    email: types.string,\n    address: types.string,\n    position: types.string,\n    password: types.string,\n    assigned: types.frozen()\n  })\n  .actions(generalAction)\n\nexport default Member;\n","import { types, flow } from \"mobx-state-tree\";\nimport generalAction from \"../generalActions\";\nimport Member from \"./member\";\nimport Store from \"../setUpStore\";\n\nconst collection = types\n  .model(\"members\", {\n    members: types.optional(types.array(Member), []),\n  })\n  .actions(generalAction)\n  .actions((self) => ({\n    getAllMember: flow(function* () {\n      try {\n        const response = yield self.getRequest(\"/user\")();\n        self.members = response.users;\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    addMember: flow(function* (member: any) {\n      try {\n        const response = yield self.postRequest(\"/user\")(member);\n        self.members = response.users;\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    assignMember: flow(function* (currentMember: any, selectedMembers: any) {\n      try {\n        const payload = {\n          assigned: selectedMembers.map((member: any) => member._id),\n        };\n        const response = yield self.putRequest(\n          `/user/assign/${currentMember._id}`\n        )(payload);\n        self.members = response.users;\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    editMember: flow(function* (member: any, _id: any) {\n      try {\n        const response = yield self.putRequest(`/user/${_id}`)(member);\n        self.members = response.users;\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    deleteMember: flow(function* (_id: any) {\n      try {\n        const response = yield self.deleteRequest(`/user/${_id}`)();\n        self.members = response.users;\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n  }))\n\n  .views((self) => ({\n    normalizedAssignedUser(memberIds: any) {\n      const members: any = [];\n      memberIds.forEach((_id: string) => {\n        const member = self.members.find((member) => member._id === _id);\n        if (member) {\n          members.push(member);\n        }\n      });\n      return members;\n    },\n\n    get membersExceptMe() {\n      return self.members.filter((member) => member._id !== Store.user._id);\n    },\n\n    membersExcept(_id: string, members: any) {\n      return members.filter((member: any) => member._id !== _id);\n    },\n  }));\n\nexport default collection;\n","import { types } from \"mobx-state-tree\";\nimport generalAction from \"../generalActions\";\nimport Member from \"../member/member\";\n\nconst Review = types\n  .model(\"review\", {\n    _id: types.string,\n    assignedUser: types.frozen(Member),\n    feedback: types.string,\n    reviewedBy: types.frozen(Member),\n  })\n  .actions(generalAction)\n\nexport default Review;\n","import { types, flow } from \"mobx-state-tree\";\nimport generalAction from \"../generalActions\";\nimport Review from \"./review\";\nimport Store from \"../setUpStore\";\nconst collection = types\n  .model(\"Review\", {\n    reviews: types.optional(types.array(Review), []),\n  })\n  .actions(generalAction)\n  .actions((self) => ({\n    getAllReview: flow(function* () {\n      const userId: string = Store.user._id;\n      try {\n        const response = yield self.getRequest(`/user/review/${userId}`)();\n        self.reviews = response.reviews;\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    editFeedback: flow(function* (_id: string, feedback: string, member: any) {\n      const currentMember = self.reviews.find((data: any) => data._id === _id);\n      try {\n        const payload: any = {\n          assignedUser: currentMember?.assignedUser?._id,\n          feedback: feedback,\n          reviewedBy: currentMember?.reviewedBy?._id,\n        };\n        const response = yield self.putRequest(`/user/review/${_id}`)(payload);\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n\n    deleteMember: flow(function* (_id: any) {\n      try {\n        const response = yield self.deleteRequest(`/user/${_id}`)();\n        return response;\n      } catch (e) {\n        throw e;\n      }\n    }),\n  }))\n  \n  .views((self) => ({\n\n    get normalizedReview() {\n      return self.reviews.map((review) => ({\n        _id: review._id,\n        feedback: review.feedback,\n        name: review.assignedUser?.name,\n        email: review.assignedUser?.email,\n        address: review.assignedUser?.address,\n        position: review.assignedUser?.position,\n        reviewedBy: review.reviewedBy?.email\n      }));\n    },\n\n    getReviewById(_id: string) {\n      self.reviews.find((reviewId: any) => reviewId === _id);\n    },\n  }));\n\nexport default collection;\n","import { createBrowserHistory } from 'history';\n\nconst apphistory = createBrowserHistory();\nexport default apphistory;\n","import MemberCollection from \"./member/memberCollection\";\nimport ReviewCollection from \"./review/reviewCollection\";\nimport User from \"./user/user\";\n\nconst store = {\n  members: MemberCollection.create({}),\n  reviews: ReviewCollection.create({}),\n  user: User.create({\n    _id: \"\",\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    position: \"\",\n    token: \"\",\n    role: \"\",\n  }),\n};\n\nwindow.app = store;\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { roleType } from \"entities/user/user\";\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    background: \"red\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport interface SideMenuType {\n  logout: () => void;\n  role: string;\n}\n\nfunction SideMenu({ logout, role }: SideMenuType) {\n  const classes = useStyles();\n  const onLogout = () => {\n    logout();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"left\"\n        open={true}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Box textAlign=\"center\">\n          <Typography variant=\"h5\">Admin panel</Typography>\n        </Box>\n\n        <List>\n          <Link style={{ textDecoration: \"none\" }} to=\"/member\">\n            {role === roleType.admin && (\n              <ListItem button key={\"member\"}>\n                <ListItemText primary=\"Member\" />\n              </ListItem>\n            )}\n\n            <Divider />\n          </Link>\n          <Link style={{ textDecoration: \"none\" }} to=\"/review\">\n            <ListItem button key={\"review\"}>\n              <ListItemText primary=\"Review\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Box textAlign=\"center\">\n          <Button onClick={onLogout}>Logout</Button>\n        </Box>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default SideMenu;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\ninterface TableDataType {\n  columns?: any;\n  rows?: any;\n  extraColumns?: () => void;\n  extraRows?: (id: string) => void;\n}\n\nfunction CommonTable({\n  columns,\n  rows,\n  extraColumns,\n  extraRows,\n}: TableDataType) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            {columns.map((column: any) => (\n              <TableCell key={column.key}>{column.title}</TableCell>\n            ))}\n            {extraColumns && extraColumns()}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows?.map((row: any,i:any) => (\n            <TableRow key={row._id}>\n              {columns.map((column: any) => (\n                <TableCell key={column.key}>{row[column.key]}</TableCell>\n              ))}\n              {extraRows && extraRows(row)}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default CommonTable;\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\ninterface ModelType {\n  open?: boolean;\n  handleClose?: () => void;\n  title?: string;\n  children?: any;\n  otherProps?:any;\n  fullWidth?:any\n}\n\nfunction Model({ open = false, handleClose, title, children, fullWidth }: ModelType) {\n  return (\n    <Dialog open={open} onClose={handleClose} fullWidth>\n      {title && <DialogTitle >{title}</DialogTitle>}\n      <DialogContent>{children}</DialogContent>\n    </Dialog>\n  );\n}\nexport default Model;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { pxToRem } from \"theme\";\n\ninterface AddMemberType {\n  currentMember?: any;\n  mode?: string;\n  handlers: {\n    addMember?: (member: any) => void;\n    editMember?: (member: any, _id: string) => void;\n    callback?: any;\n    handleClose: () => void;\n  };\n}\n\nexport default function AddMember({\n  currentMember,\n  mode = \"add\",\n  handlers,\n}: AddMemberType) {\n  const [member, setMember] = React.useState({\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    position: \"\",\n    password: \"\",\n  });\n\n  React.useEffect(() => {\n    if (mode === \"edit\") {\n      setMember({ ...currentMember });\n    }\n  }, [currentMember, mode]);\n\n  const onAdd = async () => {\n    try {\n      let response: any;\n      if (mode === \"add\") {\n        response = handlers?.addMember && (await handlers.addMember(member));\n      } else {\n        response =\n          handlers?.editMember &&\n          (await handlers.editMember(member, currentMember._id));\n      }\n      handlers.callback({\n        open: true,\n        message: response?.message,\n        severity: \"success\",\n      });\n    } catch (e) {\n      handlers.callback({\n        open: true,\n        message: e?.data?.error?.message,\n        severity: \"error\",\n      });\n    }\n    handlers.handleClose();\n  };\n\n  const onChange = (e: any) => {\n    setMember({ ...member, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Box>\n      <Box m={pxToRem(8)}>\n        <TextField\n          label=\"Name\"\n          name=\"name\"\n          value={member.name}\n          onChange={onChange}\n          type=\"text\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </Box>\n      <Box m={pxToRem(8)}>\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          value={member.email}\n          onChange={onChange}\n          type=\"text\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </Box>\n      <Box m={pxToRem(8)}>\n        <TextField\n          label=\"Address\"\n          name=\"address\"\n          value={member.address}\n          onChange={onChange}\n          type=\"text\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </Box>\n\n      <Box m={pxToRem(8)}>\n        <TextField\n          label=\"Position\"\n          name=\"position\"\n          value={member.position}\n          onChange={onChange}\n          type=\"text\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </Box>\n\n      <Box m={pxToRem(8)}>\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          value={member.password}\n          onChange={onChange}\n          type=\"password\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </Box>\n      <Box m={pxToRem(8)}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onAdd}>\n          {mode} Member\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { pxToRem } from \"theme\";\n\ninterface AddMemberType {\n  members: any;\n  currentMember: any;\n  handlers: {\n    assignMember: (currentMember: any, selectedMember: any) => void;\n    handleClose: () => void;\n  };\n}\n\nexport default function AssignMember({\n  members,\n  currentMember,\n  handlers,\n}: AddMemberType) {\n  const [selectedMembers, setSelectedMembers] = React.useState([]);\n\n  React.useEffect(() => {\n    if (currentMember?.assigned) {\n      setSelectedMembers(\n        members.normalizedAssignedUser(currentMember?.assigned)\n      );\n    }\n  }, [currentMember, currentMember.assigned, members]);\n\n  const onAssign = () => {\n    handlers.assignMember(currentMember, selectedMembers);\n    handlers.handleClose();\n  };\n\n  const onChange = (e: any, value: any) => {\n    setSelectedMembers(value);\n  };\n\n  return (\n    <Box>\n      <Box m={pxToRem(8)}>\n        <Autocomplete\n          multiple\n          options={members.membersExcept(\n            currentMember._id,\n            members.membersExceptMe\n          )}\n          value={selectedMembers}\n          onChange={onChange}\n          getOptionLabel={(option: any) => option?.email}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"standard\"\n              label=\"Member\"\n              placeholder=\"Select members\"\n            />\n          )}\n        />\n      </Box>\n      <Box m={pxToRem(8)}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onAssign}>\n          Assign Member\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    backdrop: {\n      color: theme.palette.secondary.main,\n      backgroundColor: theme.palette.primary.main,\n    },\n  })\n);\n\nfunction Loading({ loading}) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </React.Fragment>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"@material-ui/lab\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\ninterface NotificationType {\n  open: boolean;\n  onClose: () => void;\n  severity: any;\n  children: any;\n}\n\nfunction Notification({ open, onClose, severity, children }: NotificationType) {\n  return (\n    <>\n      <Snackbar open={open} autoHideDuration={2000} onClose={onClose}>\n        <Alert variant=\"filled\" severity={severity}>\n          {children}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n\nexport default Notification;\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport Table from \"common/component/table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Model from \"common/component/model\";\nimport AddMember from \"modulus/admin/addMember\";\nimport AssignMember from \"modulus/admin/assignMember\";\nimport Loading from \"common/component/loading\";\nimport Notification from \"common/component/notification\";\n\nimport { pxToRem } from \"theme\";\n\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"email\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n  },\n  {\n    title: \"Position\",\n    dataIndex: \"position\",\n    key: \"position\",\n  },\n  {\n    title: \"Password\",\n    dataIndex: \"password\",\n    key: \"password\",\n  },\n];\n\nfunction Member({ members }: any) {\n  const [openAddMemberModal, setOpenAddMemberModal] = React.useState(false);\n  const [openEditMemberModal, setOpenEditMemberModal] = React.useState(false);\n  const [currentMember, setCurrentMember] = React.useState({});\n  const [notification, setNotification] = React.useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n\n  React.useEffect(() => {\n    members.getAllMember();\n  }, [members]);\n\n  const [openAssignMemberModal, setOpenAssignMemberModal] =\n    React.useState(false);\n\n  const handleOpenAddMemberModal = () => {\n    setOpenAddMemberModal(true);\n  };\n\n  const handleCloseAddMemberModal = () => {\n    setOpenAddMemberModal(false);\n  };\n\n  const handleOpenAssignMemberModal = (_id: any) => {\n    setCurrentMember(_id);\n    setOpenAssignMemberModal(true);\n  };\n\n  const handleCloseAssignMemberModal = () => {\n    setOpenAssignMemberModal(false);\n  };\n\n  const handleOpenEditMemberModal = (member: any) => {\n    setCurrentMember(member);\n    setOpenEditMemberModal(true);\n  };\n\n  const handleCloseEditMemberModal = () => {\n    setOpenEditMemberModal(false);\n  };\n\n  const extraRows = (member: any) => (\n    <>\n      <TableCell>\n        <Button\n          variant=\"contained\"\n          onClick={() => handleOpenAssignMemberModal(member)}\n          color=\"primary\"\n        >\n          Assign\n        </Button>\n      </TableCell>\n      <TableCell>\n        <Button\n          variant=\"contained\"\n          onClick={() => handleOpenEditMemberModal(member)}\n          color=\"primary\"\n        >\n          Edit\n        </Button>\n        &nbsp;\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={async () => {\n            try {\n              const response: any = await members.deleteMember(member?._id);\n              setNotification({\n                message: response?.message,\n                severity: \"success\",\n                open: true,\n              });\n            } catch (e) {\n              setNotification({\n                message: e?.data?.error?.message,\n                severity: \"success\",\n                open: true,\n              });\n              console.info(e);\n            }\n          }}\n        >\n          Delete\n        </Button>\n      </TableCell>\n    </>\n  );\n\n  const extraColumns = () => (\n    <>\n      <TableCell>Review</TableCell>\n      <TableCell>Action</TableCell>\n    </>\n  );\n\n  if (members.members.length < 0) {\n    return <Loading loading={true} />;\n  }\n\n  return (\n    <Box m={pxToRem(20)}>\n      <Typography variant=\"h4\">Member</Typography>\n      <br />\n      <br />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleOpenAddMemberModal}\n      >\n        Add Member\n      </Button>\n      <br />\n      <br />\n      <Table\n        rows={members.membersExceptMe}\n        columns={columns}\n        extraRows={extraRows}\n        extraColumns={extraColumns}\n      />\n      <Model\n        title=\"Add Member\"\n        open={openAddMemberModal}\n        handleClose={handleCloseAddMemberModal}\n        fullWidth\n      >\n        <AddMember\n          handlers={{\n            addMember: members.addMember,\n            callback: setNotification,\n            handleClose: handleCloseAddMemberModal,\n          }}\n        />\n      </Model>\n      <Model\n        title=\"Assign Member For Review\"\n        open={openAssignMemberModal}\n        handleClose={handleCloseAssignMemberModal}\n        fullWidth\n      >\n        <AssignMember\n          members={members}\n          currentMember={currentMember}\n          handlers={{\n            assignMember: members.assignMember,\n            handleClose: handleCloseAssignMemberModal,\n          }}\n        />\n      </Model>\n      <Model\n        title=\"Assign Member For Review\"\n        open={openEditMemberModal}\n        handleClose={handleCloseEditMemberModal}\n        fullWidth\n      >\n        <AddMember\n          mode=\"edit\"\n          currentMember={currentMember}\n          handlers={{\n            editMember: members.editMember,\n            callback: setNotification,\n            handleClose: handleCloseEditMemberModal,\n          }}\n        />\n      </Model>\n      <Notification\n        open={notification.open}\n        onClose={() => setNotification({ ...notification, open: false })}\n        severity={notification.severity}\n      >\n        {notification?.message}\n      </Notification>\n    </Box>\n  );\n}\n\nexport default inject(\"members\")(observer(Member));\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { pxToRem } from \"theme\";\n\ninterface AddMemberType {\n  currentMember: any;\n  handlers: {\n    editFeedback: (id: string, feedback: string, currentMember: any) => void;\n    getAllReview: () => void;\n    callback?: any;\n    handleClose: () => void;\n  };\n}\n\nexport default function AddFeedback({\n  currentMember,\n  handlers,\n}: AddMemberType) {\n  const [feedback, setFeedback] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (currentMember.feedback) {\n      setFeedback(currentMember.feedback);\n    }\n  }, [currentMember]);\n\n  const onChange = (e: any) => {\n    setFeedback(e.target.value);\n  };\n\n\n  const onAdd = async () => {\n    try {\n      let response: any =\n        handlers?.editFeedback &&\n        (await handlers.editFeedback(\n          currentMember._id,\n          feedback,\n          currentMember\n        ));\n      handlers.getAllReview();\n\n      handlers.callback({\n        open: true,\n        message: response?.message,\n        severity: \"success\",\n      });\n    } catch (e) {\n      handlers.callback({\n        open: true,\n        message: e?.data?.error?.message,\n        severity: \"error\",\n      });\n    }\n    handlers.handleClose();\n  };\n\n  return (\n    <Box>\n      <Box m={pxToRem(8)}>\n        <TextField\n          id=\"feedback\"\n          label=\"Feedback\"\n          multiline\n          rows={6}\n          fullWidth\n          variant=\"outlined\"\n          value={feedback}\n          onChange={onChange}\n        />\n      </Box>\n      <Box m={pxToRem(8)}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onAdd}>\n          Add Feedback\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport Table from \"common/component/table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Model from \"common/component/model\";\nimport Notification from \"common/component/notification\";\nimport AddFeedback from \"./addFeedback\";\n\nimport { pxToRem } from \"theme\";\n\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"email\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n  },\n  {\n    title: \"Position\",\n    dataIndex: \"position\",\n    key: \"position\",\n  },\n  {\n    title: \"ReviewedBy\",\n    dataIndex: \"reviewedBy\",\n    key: \"reviewedBy\",\n  },\n];\n\nfunction Review({ reviews }: any) {\n  const [openFeedbackModal, setOpenFeedbackModal] = React.useState(false);\n  const [currentMember, setCurrentMember] = React.useState({});\n  const [notification, setNotification] = React.useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n\n\n  React.useEffect(() => {\n    reviews.getAllReview();\n  }, [reviews]);\n\n  const handleOpenFeedbackModal = (member: any) => {\n    setCurrentMember(member);\n    setOpenFeedbackModal(true);\n  };\n\n  const handleCloseFeedbackModal = () => {\n    setOpenFeedbackModal(false);\n  };\n\n  const extraRows = (member: any) => (\n    <TableCell>\n      <Button\n        variant=\"contained\"\n        onClick={() => handleOpenFeedbackModal(member)}\n        color=\"primary\"\n      >\n        {member?.feedback ? \"edit\" : \"add\"}\n      </Button>\n    </TableCell>\n  );\n\n  const extraColumns = () => (\n    <>\n      <TableCell>Feedback</TableCell>\n    </>\n  );\n\n  return (\n    <Box m={pxToRem(20)}>\n      <Typography variant='h4'>Review</Typography>\n      <br />\n      <br />\n      <Table\n        rows={reviews.normalizedReview}\n        columns={columns}\n        extraRows={extraRows}\n        extraColumns={extraColumns}\n      />\n      <Model\n        title=\"Assign Member For Review\"\n        open={openFeedbackModal}\n        handleClose={handleCloseFeedbackModal}\n        fullWidth\n      >\n        <AddFeedback\n          currentMember={currentMember}\n          handlers={{\n            editFeedback: reviews.editFeedback,\n            getAllReview: reviews.getAllReview,\n            handleClose: handleCloseFeedbackModal,\n            callback: setNotification\n          }}\n        />\n      </Model>\n      <Notification\n        open={notification.open}\n        onClose={() => setNotification({ ...notification, open: false })}\n        severity={notification.severity}\n      >\n        {notification?.message}\n      </Notification>\n    </Box>\n  );\n}\n\nexport default inject(\"reviews\")(observer(Review));\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Notification from \"common/component/notification\";\nimport { pxToRem } from \"theme\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 575,\n  },\n});\n\nfunction Login({ user }: any) {\n  const classes = useStyles();\n\n  const [loginData, setLoginData] = React.useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [notification, setNotification] = React.useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n\n  const onChange = (e: any) => {\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\n  };\n\n  const onLogin = async () => {\n    try {\n      await user.login(loginData);\n    } catch (e) {\n      setNotification({\n        open: true,\n        severity: \"error\",\n        message: e?.data?.error?.message,\n      });\n    }\n  };\n\n  // const receiveMessage = (event: any) => {\n  //   console.log(\"this is event\", event);\n  //   // alert(\"got message: \" + event.data);\n  // };\n  function getData() {\n    setTimeout(() => {\n      const myIframe = document.getElementById(\"test\");\n      console.log(\"myIframe\", myIframe);\n      // @ts-ignore\n\n      const message = {\n        apiKey:\"1234\",\n        onPreview:'()=>{}',\n        onSave:'()=>{}',\n      };\n      // @ts-ignore\n      myIframe.contentWindow.postMessage(\n        JSON.stringify(message),\n        \"*\"\n      );\n    }, 1000);\n  }\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" mt={pxToRem(240)}>\n      <Card className={classes.root} variant=\"outlined\">\n        <Box m={pxToRem(12)} textAlign=\"center\">\n          <Typography variant=\"h4\" color=\"primary\">\n            Login\n          </Typography>\n        </Box>\n        <Box m={pxToRem(12)}>\n          <TextField\n            label=\"Email\"\n            name=\"email\"\n            value={loginData.email}\n            onChange={onChange}\n            type=\"text\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        </Box>\n        <Box m={pxToRem(12)}>\n          <TextField\n            label=\"Password\"\n            name=\"password\"\n            value={loginData.password}\n            onChange={onChange}\n            type=\"password\"\n            variant=\"outlined\"\n            fullWidth\n          />\n        </Box>\n        <Box m={pxToRem(12)}>\n          <Button variant=\"contained\" onClick={onLogin} color=\"primary\">\n            Login\n          </Button>\n        </Box>\n      </Card>\n      <iframe\n        width=\"853\"\n        onLoad={getData}\n        id=\"test\"\n        height=\"480\"\n        src=\"http://localhost:3000\"\n        frameBorder=\"0\"\n        allowFullScreen\n      ></iframe>\n      <Notification\n        open={notification.open}\n        onClose={() => setNotification({ ...notification, open: false })}\n        severity={notification.severity}\n      >\n        {notification?.message}\n      </Notification>\n    </Box>\n  );\n}\nexport default inject(\"user\")(observer(Login));\n","import Member from \"modulus/admin/member\";\nimport Review from \"modulus/review\";\nimport Login from \"modulus/login\";\nimport Test from \"modulus/test\"\n\nexport default [\n  {\n    component: Member,\n    path: \"/member\",\n    exact: true,\n    is_private: true,\n  },\n  {\n    component: Review,\n    path: \"/review\",\n    exact: true,\n    is_private: true\n  },\n  {\n    component: Login,\n    path: \"/\",\n    exact: true,\n    is_private: false\n\n  },\n  {\n    component: Test,\n    path: \"/test\",\n    exact: true,\n    is_private: false\n\n  },\n];\n","import React from 'react';\n\nconst DeveloperTest = () => {\n\tReact.useEffect(() => {\n\t\tconst existingScript = document.getElementById('zegal-cdn');\n\n\t\tif (!existingScript) {\n\t\t\tconst script = document.createElement('script');\n\n\t\t\tconst isLocalhost = window.location.hostname === `localhost` || window.location.hostname === `127.0.0.1`;\n\n\t\t\tscript.src = true\n\t\t\t\t? 'http://localhost:8080/zegal.lite.local.min.js'\n\t\t\t\t: 'https://zegal-client.s3.ap-south-1.amazonaws.com/iframe/zegal.js';\n\t\t\tscript.id = 'zegal-cdn';\n\n\t\t\tdocument.body.appendChild(script);\n\n\t\t\tscript.onload = () => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst Zegal = window?.Zegal;\n\n\t\t\t\tvar zKEY = {\n\t\t\t\t\tAPIKEY: 'pk_d673b831-a9b8-43c2-b788-6a68a15a83a1',\n\t\t\t\t\tWLID: '628ca170e63d8e578358e595',\n\t\t\t\t\tcategory: '62da1da8816ff0d01bc26a23',\n\t\t\t\t\tdoctype: '62e36d387a5a845189ff4bb9',\n\t\t\t\t\tguide: '62da1cfe816ff06d80c26a20'\n\t\t\t\t};\n\n\t\t\t\t//staging\n\t\t\t\t// var zKEY = {\n\t\t\t\t// \tAPIKEY: 'pk_0a476f39-d75e-4527-b3d5-909ebe472775',\n\t\t\t\t// \tWLID: '62b2e391d3101c1a8955d506',\n\t\t\t\t// \tcategory: '634e82ecc274156ea761ed76',\n\t\t\t\t// \tdoctype: '6352473ae0190f7002bf5818',\n\t\t\t\t// \tguide: '611a0c7e8cf39979a161ef94'\n\t\t\t\t// };\n\n\t\t\t\tconst zegal = new Zegal({\n\t\t\t\t\tAPIKEY: zKEY.APIKEY,\n\t\t\t\t\tWLID: zKEY.WLID,\n\t\t\t\t\tCONTAINERID: 'zegal-iframe-container',\n\t\t\t\t\tGUIDEID: zKEY.guide\n\t\t\t\t});\n\n\t\t\t\tzegal.loadDocument({\n\t\t\t\t\t...zKEY,\n\t\t\t\t\texisting: false\n\t\t\t\t});\n\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow.zegal = zegal;\n\t\t\t};\n\n\t\t\tscript.onerror = (error) => {\n\t\t\t\tconsole.error('Error while loading script', error);\n\t\t\t};\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\tinset: 0,\n\t\t\t\t\tbackgroundColor: '#fff',\n\t\t\t\t\tzIndex: 9999\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\twindow.zegal.getInvoice({});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tinvoice\n\t\t\t\t</button>\n\t\t\t\t<div id='zegal-iframe-container' style={{height: '100%'}} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default DeveloperTest;\n","import React from \"react\";\nimport { Route, Switch, Router as BrowserRouter } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Sidebar from \"modulus/sidebar\";\nimport routes from \"./\";\nimport apphistory from \"apphistory\";\n\nfunction RouterSwitch({ token }) {\n  if (token) {\n    apphistory.push(\"/review\");\n  }\n  return (\n    <Switch>\n      {routes.map(({ ...rest }, index) => {\n        if (token) {\n          if (rest.is_private) {\n            return <Route key={index} {...rest} />;\n          }\n        } else {\n          if (!rest.is_private) {\n            return <Route key={index} {...rest} />;\n          }\n        }\n        return null;\n      })}\n    </Switch>\n  );\n}\n\nconst Router = ({ user }) => {\n  const { token, logout, role } = user;\n  return (\n    <BrowserRouter history={apphistory}>\n      {token && (\n        <Box>\n          <Sidebar logout={logout} role={role} />\n        </Box>\n      )}\n\n      <Box ml={token ? \"200px\" : 0}>\n        <RouterSwitch token={token} />\n      </Box>\n    </BrowserRouter>\n  );\n};\n\nexport default inject(\"user\")(observer(Router));\n","import React from \"react\";\n\nimport Path from \"./route/route\";\n\nfunction App() {\n  return (\n    <>\n      <Path />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"./theme\";\nimport store from \"./entities/setUpStore\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nfunction WrapThemeProvider(props) {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {props.children}\n    </ThemeProvider>\n  );\n}\n\nReactDOM.render(\n  <Provider {...store}>\n    <WrapThemeProvider>\n      <App />\n    </WrapThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}